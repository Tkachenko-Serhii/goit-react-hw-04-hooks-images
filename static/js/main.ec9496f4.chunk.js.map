{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","Api/Api.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","searchValue","page","a","fetch","then","response","ok","json","Promise","reject","error","Error","images","hits","Searchbar","onSubmit","useState","value","setValue","className","s","searchbar","form","e","preventDefault","trim","toast","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","ImageGalleryItem","image","onClick","id","webformatURL","largeImageURL","tags","item","src","alt","ImageGallery","gallery","map","Button","loadMore","Loader","color","height","width","loader","modalRoot","document","querySelector","Modal","onClose","useEffect","handleModalClose","code","window","addEventListener","removeEventListener","createPortal","overlay","target","Status","App","setImages","status","setStatus","fullImg","setFullImg","showModal","setShowModal","setPage","setSearchValue","fetchImages","length","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","popularImages","handleFormSubmit","newSearchValue","autoClose","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec9496f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__EDMwQ\",\"image\":\"ImageGalleryItem_image__37-To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1lYH5\",\"modal\":\"Modal_modal__3pxw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__TC6Dx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3ngrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3KMN5\"};","async function fetchImages(searchValue, page) {\r\n  const images = await fetch(\r\n    `https://pixabay.com/api/?q=${searchValue}&page=${page}&key=23056173-38182a6d52ebc31115cd52ab2&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject({\r\n      error: new Error(\r\n        `No images for you request: ${searchValue}, please enter more specific query!`\r\n      ),\r\n    });\r\n  });\r\n  return images.hits;\r\n}\r\n\r\nasync function popularImages(page) {\r\n  const images = await fetch(\r\n    `https://pixabay.com/api/?q=&page=${page}&key=23056173-38182a6d52ebc31115cd52ab2&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject({\r\n      error: new Error(\r\n        `No images for you request, please enter more specific query!`\r\n      ),\r\n    });\r\n  });\r\n\r\n  return images.hits;\r\n}\r\n\r\nexport { fetchImages, popularImages };\r\n","import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSearchValueChange = (e) => {\r\n    setValue(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.trim() === \"\") {\r\n      toast.error(\"Enter your search query!\");\r\n      return;\r\n    }\r\n    onSubmit(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form className={s.form} onSubmit={formSubmit}>\r\n        <button type='submit' className={s.button}>\r\n          <span className={s.label}>Search</span>\r\n        </button>\r\n        <input\r\n          className={s.input}\r\n          type='text'\r\n          autoComplete='off'\r\n          autoFocus\r\n          value={value}\r\n          placeholder='Search images and photos'\r\n          onChange={handleSearchValueChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nexport default function ImageGalleryItem({ image, onClick }) {\r\n  const { id, webformatURL, largeImageURL, tags } = image;\r\n\r\n  return (\r\n    <li className={s.item} key={id}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.image}\r\n        onClick={() => {\r\n          onClick(largeImageURL);\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n  toggleModal: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport s from \"./ImageGallery.module.css\";\r\n\r\nexport default function ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className={s.gallery}>\r\n      {images.map((image) => {\r\n        return (\r\n          <ImageGalleryItem key={image.id} image={image} onClick={onClick} />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onItemClick: PropTypes.func,\r\n};\r\n","import s from \"./Button.module.css\";\r\n\r\nexport default function Button({ loadMore }) {\r\n  return (\r\n    <button type='button' className={s.button} onClick={() => loadMore()}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Spinner from \"react-loader-spinner\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      type='ThreeDots'\r\n      color='#00BFFF'\r\n      height={100}\r\n      width={100}\r\n      className={s.loader}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ src, onClose }) {\r\n  useEffect(() => {\r\n    const handleModalClose = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleModalClose);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleModalClose);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={s.overlay} onClick={handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={src} alt='' />\r\n        </div>\r\n      </div>\r\n    </>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { fetchImages, popularImages } from \"./Api/Api\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Loader from \"./components/Loader\";\nimport Modal from \"./components/Modal\";\n\nimport \"./App.css\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [fullImg, setFullImg] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchValue) {\n      popularImages(page)\n        .then((images) => {\n          if (!images.length) {\n            return toast.error(\n              \"No images for you request, please enter more specific query\"\n            );\n          }\n          setImages((prevState) => [...prevState, ...images]);\n          setStatus(Status.RESOLVED);\n        })\n        .catch((error) => {\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => {\n          if (page > 1) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: \"smooth\",\n            });\n          }\n        });\n      return;\n    }\n\n    setStatus(Status.PENDING);\n\n    fetchImages(searchValue, page)\n      .then((images) => {\n        if (!images.length) {\n          return toast.error(\n            \"No images for you request, please enter more specific query\"\n          );\n        }\n        setImages((prevState) => [...prevState, ...images]);\n        setStatus(Status.RESOLVED);\n      })\n      .catch((error) => {\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        if (page > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      });\n  }, [searchValue, page]);\n\n  const handleFormSubmit = (newSearchValue) => {\n    if (searchValue !== newSearchValue) {\n      setSearchValue(newSearchValue);\n      setImages([]);\n      setPage(1);\n    }\n  };\n\n  const toggleModal = (largeImageURL) => {\n    if (!showModal) {\n      setShowModal(!showModal);\n      setFullImg(largeImageURL);\n    }\n  };\n\n  const loadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  if (status === Status.IDLE) {\n    return (\n      <>\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={handleFormSubmit} />\n      </>\n    );\n  }\n  if (status === Status.PENDING) {\n    return (\n      <>\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={handleFormSubmit} />\n        <Loader />;\n      </>\n    );\n  }\n  if (status === Status.RESOLVED) {\n    return (\n      <div className='App'>\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageGallery images={images} onClick={toggleModal} />\n        <Button loadMore={loadMore} images={images} />\n        {showModal && (\n          <Modal\n            src={fullImg}\n            onClose={() => {\n              setFullImg(null);\n              setShowModal(false);\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n  if (status === Status.REJECTED) {\n    return toast.error(\n      \"No images for you request, please enter more specific query\"\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__SmEpw\",\"form\":\"Searchbar_form__1To6V\",\"button\":\"Searchbar_button__23T_d\",\"label\":\"Searchbar_label__1yFpG\",\"input\":\"Searchbar_input__1JD8b\"};"],"sourceRoot":""}